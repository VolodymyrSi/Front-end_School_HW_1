{"version":3,"sources":["components/UserFeedItem.js","features/UserInfo.js","services/feedRequest.js","services/userRequest.js","store/context.js","pages/UserFeedPage.js","components/TrendingFeedItem.js","pages/TrendingFeedPage.js","App.js","index.js"],"names":["UserFeedItem","userFeedServerData","className","map","userFeedVideos","Card","key","id","Body","height","video","src","playAddr","width","Title","desc","avatar","author","avatarThumb","nickname","comments","stats","commentCount","likes","diggCount","views","playCount","propTypes","arrayOf","shape","string","isRequired","videoMeta","UserInfo","user","alt","avatarLarger","followerCount","toLocaleString","followingCount","heartCount","videoCount","defaultProps","currentUser","response","a","get","console","log","data","error","TikTukContext","setIsLoading","isLoading","parameters","userDataFromServer","setUserDataFromServer","dummyUserDataVideos","setDummyUserDataVideos","then","itemList","catch","userInfoData","slice","TrendingFeedItem","trendingFeedServerData","trendingVideosData","videoUrl","text","to","authorMeta","name","nickName","duration","setTrendingFeedServerData","trendingFeedData","contextValues","Provider","value","element","path","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.1e5e0345.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport { Author, Stats, Video } from \"@volodymyrsi/component-library\";\n\nconst UserFeedItem = ({ userFeedServerData }) => {\n  return (\n    <div className=\"bg-dark\">\n      {userFeedServerData.map((userFeedVideos) => (\n        <Card\n          key={userFeedVideos.id}\n          className=\"bg-dark text-light text-center\"\n        >\n          <Card.Body>\n            <Video\n              height={userFeedVideos.video.height / 2}\n              src={userFeedVideos.video.playAddr}\n              width={userFeedVideos.video.width / 2}\n            />\n            <Card.Title>{userFeedVideos.desc}</Card.Title>\n            <Author\n              avatar={userFeedVideos.author.avatarThumb}\n              nickname={userFeedVideos.author.nickname}\n            />\n            <Stats\n              comments={userFeedVideos.stats.commentCount}\n              likes={userFeedVideos.stats.diggCount}\n              views={userFeedVideos.stats.playCount}\n            />\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nUserFeedItem.propTypes = {\n  userFeedServerData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      videoMeta: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default UserFeedItem;\n","import PropTypes from \"prop-types\";\n\nconst UserInfo = ({ user, stats }) => {\n  return (\n    <div className=\"bg-dark text-light d-flex align-items-center justify-content-center p-3\">\n      {user && (\n        <div>\n          <h2 className=\"text-center\">{user.nickname}</h2>\n          <img alt={user.nickname} className=\"w-200\" src={user.avatarLarger} />\n        </div>\n      )}\n      {stats && (\n        <div className=\"ml-3\">\n          <p>{`‚¨ÖÔ∏è Followers: ${stats.followerCount.toLocaleString()}`}</p>\n          <p>{`‚û°Ô∏è Following: ${stats.followingCount.toLocaleString()}`}</p>\n          <p>{`‚ù§Ô∏è Total likes: ${stats.heartCount.toLocaleString()}`}</p>\n          <p>{`üé• Total videos: ${stats.videoCount.toLocaleString()}`}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nUserInfo.propTypes = {\n  stats: PropTypes.shape({\n    followerCount: PropTypes.string.isRequired,\n    followingCount: PropTypes.string.isRequired,\n    heartCount: PropTypes.string.isRequired,\n    videoCount: PropTypes.string.isRequired,\n  }),\n  user: PropTypes.shape({\n    avatarLarger: PropTypes.string.isRequired,\n    nickname: PropTypes.string.isRequired,\n  }),\n};\n\nUserInfo.defaultProps = {\n  stats: {\n    followerCount: \"no data\",\n    followingCount: \"no data\",\n    heartCount: \"no data\",\n    videoCount: \"no data\",\n  },\n  user: {\n    nickname: \"John Doe\",\n    avatarLarger:\n      \"https://pbs.twimg.com/profile_images/1326707048478892033/Ln0v50LP_400x400.jpg\",\n  },\n};\n\nexport default UserInfo;\n","import axios from \"axios\";\n\nconst getTrendingFeedData = async (currentUser) => {\n  try {\n    const response = await axios.get(\"trendingFeed.json\");\n    console.log(currentUser);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport default getTrendingFeedData;\n","import axios from \"axios\";\n\nconst getUserInfoData = async (currentUser) => {\n  try {\n    const response = await axios.get(\"userFeed.json\");\n    console.log(currentUser);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport default getUserInfoData;\n","import { createContext } from \"react\";\n\nexport const TikTukContext = createContext();\n\nexport default TikTukContext;\n","import axios from \"axios\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { LoadingSpinner } from \"@volodymyrsi/component-library\";\nimport UserFeedItem from \"../components/UserFeedItem\";\nimport UserInfo from \"../features/UserInfo\";\nimport { getUserInfoData } from \"../services\";\nimport { TikTukContext } from \"../store/context\";\n\nconst UserFeedPage = () => {\n  const maxPosts = 29;\n  const { setIsLoading, isLoading } = useContext(TikTukContext);\n  const parameters = useParams();\n\n  const [userDataFromServer, setUserDataFromServer] = useState({});\n  const [dummyUserDataVideos, setDummyUserDataVideos] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"./user-feed.json\")\n      .then((response) => {\n        setDummyUserDataVideos(response.data.itemList);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    if (parameters.currentUser) {\n      getUserInfoData(parameters.currentUser)\n        .then((userInfoData) => {\n          setUserDataFromServer(userInfoData);\n          setIsLoading(false);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [parameters]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <UserInfo\n          stats={userDataFromServer.stats}\n          user={userDataFromServer.user}\n        />\n      )}\n      {dummyUserDataVideos && (\n        <UserFeedItem\n          userFeedServerData={dummyUserDataVideos.slice(0, maxPosts)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserFeedPage;\n","import { Link } from \"react-router-dom\";\nimport { Author, Stats, Video } from \"@volodymyrsi/component-library\";\nimport PropTypes, { number } from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\n\nconst TrendingFeedItem = ({ trendingFeedServerData }) => {\n  return (\n    <div className=\"bg-dark\">\n      {trendingFeedServerData.map((trendingVideosData) => (\n        <Card\n          key={trendingVideosData.id}\n          className=\"bg-dark text-light text-center\"\n        >\n          <Card.Body>\n            <Video\n              height={trendingVideosData.videoMeta.height / 2}\n              src={trendingVideosData.videoUrl}\n              width={trendingVideosData.videoMeta.width / 2}\n            />\n            <Card.Title>{trendingVideosData.text}</Card.Title>\n            <Link to={`/${trendingVideosData.authorMeta.name}`}>\n              <Author\n                avatar={trendingVideosData.authorMeta.avatar}\n                nickname={trendingVideosData.authorMeta.nickName}\n              />\n            </Link>\n            <Stats\n              comments={trendingVideosData.commentCount}\n              likes={trendingVideosData.diggCount}\n            />\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nTrendingFeedItem.propTypes = {\n  trendingFeedServerData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      videoMeta: PropTypes.shape({\n        duration: number,\n        height: number,\n        width: number,\n      }),\n      videoUrl: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TrendingFeedItem;\n","import { useState, useEffect, useContext } from \"react\";\nimport { LoadingSpinner } from \"@volodymyrsi/component-library\";\nimport { TikTukContext } from \"../store/context\";\nimport TrendingFeedItem from \"../components/TrendingFeedItem\";\nimport { getTrendingFeedData } from \"../services\";\n\nconst TrendingFeedPage = () => {\n  const { setIsLoading, isLoading } = useContext(TikTukContext);\n  const [trendingFeedServerData, setTrendingFeedServerData] = useState([]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsLoading(true);\n    }\n    getTrendingFeedData().then((trendingFeedData) => {\n      setTrendingFeedServerData(trendingFeedData);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <TrendingFeedItem trendingFeedServerData={trendingFeedServerData} />\n      )}\n    </div>\n  );\n};\n\nexport default TrendingFeedPage;\n","import { useMemo, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserFeedPage from \"./pages/UserFeedPage\";\nimport TrendingFeedPage from \"./pages/TrendingFeedPage\";\nimport { TikTukContext } from \"./store/context\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const contextValues = useMemo(\n    () => ({ isLoading, setIsLoading }),\n    [isLoading, setIsLoading]\n  );\n  return (\n    <TikTukContext.Provider value={contextValues}>\n      <div className=\"App\">\n        <Routes>\n          <Route element={<TrendingFeedPage />} path=\"/\" />\n          <Route element={<UserFeedPage />} path=\"/:currentUser\" />\n        </Routes>\n      </div>\n    </TikTukContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./assets/styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}