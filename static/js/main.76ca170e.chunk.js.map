{"version":3,"sources":["features/Video.tsx","assets/img.png","features/Author.tsx","features/Stats.tsx","assets/sample.mp4","components/UserFeedItem.js","features/UserInfo.tsx","services/feedRequest.ts","services/userRequest.ts","assets/LoadingSpinner.js","store/context.js","pages/UserFeedPage.tsx","components/TrendingFeedItem.js","pages/TrendingFeedPage.tsx","App.js","index.js"],"names":["Video","height","src","width","className","controls","title","Author","nickname","alt","sampleAvatar","style","marginRight","display","Stats","likes","comments","views","toLocaleString","UserFeedItem","userFeedServerData","map","userFeedVideos","Card","Body","video","sample","Title","desc","avatar","author","avatarThumb","stats","commentCount","diggCount","playCount","id","UserInfo","user","avatarLarger","followerCount","followingCount","heartCount","videoCount","defaultProps","getTrendingFeedData","a","axios","get","response","data","console","error","getUserInfoData","LoadingSpinner","Spinner","animation","position","top","left","TikTukContext","createContext","UserFeedPage","useContext","setIsLoading","isLoading","parameters","useParams","useState","undefined","userDataFromServer","setUserDataFromServer","dummyUserDataVideos","setDummyUserDataVideos","useEffect","then","itemList","catch","log","currentUser","userInfoData","slice","TrendingFeedItem","trendingFeedServerData","trendingVideosData","videoMeta","text","to","authorMeta","name","nickName","TrendingFeedPage","videoIndex","setVideoIndex","setTrendingFeedServerData","trendingFeedData","length","Button","onClick","type","variant","App","contextValues","useMemo","Provider","value","element","path","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.76ca170e.chunk.js","sourcesContent":["interface VideoProperties {\n  height: number;\n  src: string;\n  width: number;\n}\n\nconst Video = ({ height, src, width }: VideoProperties) => {\n  return (\n    <div className=\"text-center\">\n      <video\n        className=\"m-lg-5\"\n        controls\n        height={height}\n        src={src}\n        title=\"Embedded video\"\n        width={width}\n      />\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/img.949a5b78.png\";","import sampleAvatar from \"../assets/img.png\";\n\ninterface AuthorProperties {\n  nickname: string;\n}\n\nconst Author = ({ nickname }: AuthorProperties) => {\n  return (\n    <div className=\"userData mt-2 mb-2 text-center\">\n      <img\n        alt=\"user\"\n        className=\"d-inline h-auto rounded\"\n        src={sampleAvatar}\n        style={{\n          width: 60,\n          marginRight: 10,\n        }}\n      />\n      <h4 className=\"text-light\" style={{ display: \"inline\" }}>\n        {nickname || \"John Doe\"}\n      </h4>\n    </div>\n  );\n};\n\nexport default Author;\n","interface StatsTypes {\n  likes: string;\n  comments: string;\n  views: string;\n}\n\nconst Stats = ({ likes, comments, views }: StatsTypes) => {\n  return (\n    <div className=\"videoStats text-secondary mt-3\">\n      <h4>{`‚ù§Ô∏è Likes: ${likes.toLocaleString()}`}</h4>\n      <h4>{`üí≠ Comments: ${comments.toLocaleString()}`}</h4>\n      {views && <h4>{`üì∫ Views: ${views.toLocaleString()}`}</h4>}\n    </div>\n  );\n};\n\nexport default Stats;\n","export default __webpack_public_path__ + \"static/media/sample.4d89e0c8.mp4\";","import PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport Video from \"../features/Video.tsx\";\nimport Author from \"../features/Author.tsx\";\nimport Stats from \"../features/Stats.tsx\";\nimport sample from \"../assets/sample.mp4\";\n\nconst UserFeedItem = ({ userFeedServerData }) => {\n  return (\n    <div className=\"bg-dark\">\n      {userFeedServerData.map((userFeedVideos) => (\n        <Card\n          key={userFeedVideos.id}\n          className=\"bg-dark text-light text-center\"\n        >\n          <Card.Body>\n            <Video\n              height={userFeedVideos.video.height / 2}\n              src={sample}\n              width={userFeedVideos.video.width / 2}\n            />\n            <Card.Title>{userFeedVideos.desc}</Card.Title>\n            <Author\n              avatar={userFeedVideos.author.avatarThumb}\n              nickname={userFeedVideos.author.nickname}\n            />\n            <Stats\n              comments={userFeedVideos.stats.commentCount}\n              likes={userFeedVideos.stats.diggCount}\n              views={userFeedVideos.stats.playCount}\n            />\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nUserFeedItem.propTypes = {\n  userFeedServerData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      videoMeta: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default UserFeedItem;\n","interface UserTypes {\n  nickname: string;\n  avatarLarger: string;\n}\n\ninterface StatsTypes {\n  followerCount: string;\n  followingCount: string;\n  heartCount: string;\n  videoCount: string;\n}\n\ninterface UserInfoProperties {\n  user?: UserTypes;\n  stats?: StatsTypes;\n}\n\nconst UserInfo = ({ user, stats }: UserInfoProperties) => {\n  return (\n    <div className=\"bg-dark text-light d-flex align-items-center justify-content-center p-3 flex-column flex-md-row\">\n      {user && (\n        <div className=\"text-center\">\n          <h2 className=\"text-center\">{user.nickname}</h2>\n          <img\n            alt={user.nickname}\n            className=\"w-50 mb-2\"\n            src={user.avatarLarger}\n          />\n        </div>\n      )}\n      {stats && (\n        <div className=\"ml-3\">\n          <p>{`‚¨ÖÔ∏è Followers: ${stats.followerCount.toLocaleString()}`}</p>\n          <p>{`‚û°Ô∏è Following: ${stats.followingCount.toLocaleString()}`}</p>\n          <p>{`‚ù§Ô∏è Total likes: ${stats.heartCount.toLocaleString()}`}</p>\n          <p>{`üé• Total videos: ${stats.videoCount.toLocaleString()}`}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nUserInfo.defaultProps = {\n  stats: {\n    followerCount: \"I wish I could access a server\",\n    followingCount: \"I remember I could do things like that\",\n    heartCount: \"I do not feel connected...\",\n    videoCount: \"This must be some sort of punishment. Am I in hell?\",\n  },\n  user: {\n    nickname: \"John Doe\",\n    avatarLarger:\n      \"https://pbs.twimg.com/profile_images/1326707048478892033/Ln0v50LP_400x400.jpg\",\n  },\n};\n\nexport default UserInfo;\n","import axios from \"axios\";\n\nconst getTrendingFeedData = async () => {\n  try {\n    const response = await axios.get(\"trendingFeed.json\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport default getTrendingFeedData;\n","import axios from \"axios\";\n\nconst getUserInfoData = async () => {\n  try {\n    const response = await axios.get(\"userFeed.json\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport default getUserInfoData;\n","import { Spinner } from \"react-bootstrap\";\n\nconst LoadingSpinner = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}\n    />\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from \"react\";\n\nexport const TikTukContext = createContext();\n\nexport default TikTukContext;\n","import axios from \"axios\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport UserFeedItem from \"../components/UserFeedItem\";\n// @ts-ignore\nimport UserInfo from \"../features/UserInfo.tsx\";\nimport { getUserInfoData } from \"../services\";\nimport LoadingSpinner from \"../assets/LoadingSpinner\";\nimport { TikTukContext } from \"../store/context\";\n\nconst UserFeedPage = () => {\n  const maxPosts = 29;\n  const { setIsLoading, isLoading } = useContext(TikTukContext);\n  const parameters = useParams();\n\n  const [userDataFromServer, setUserDataFromServer] = useState({\n    stats: undefined,\n    user: undefined,\n  });\n  const [dummyUserDataVideos, setDummyUserDataVideos] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"./userFeed.json\")\n      .then((response) => {\n        setDummyUserDataVideos(response.data.itemList);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    if (parameters.currentUser) {\n      getUserInfoData(parameters.currentUser)\n        .then((userInfoData: any) => {\n          setUserDataFromServer(userInfoData);\n          setIsLoading(false);\n        })\n        .catch((error: any) => console.log(error));\n    }\n  }, [parameters]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <UserInfo\n          stats={userDataFromServer.stats}\n          user={userDataFromServer.user}\n        />\n      )}\n      {dummyUserDataVideos && (\n        <UserFeedItem\n          userFeedServerData={dummyUserDataVideos.slice(0, maxPosts)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserFeedPage;\n","import { Link } from \"react-router-dom\";\nimport PropTypes, { number } from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport Video from \"../features/Video.tsx\";\nimport Author from \"../features/Author.tsx\";\nimport Stats from \"../features/Stats.tsx\";\nimport sample from \"../assets/sample.mp4\";\n\nconst TrendingFeedItem = ({ trendingFeedServerData }) => {\n  return (\n    <div className=\"bg-dark\">\n      {trendingFeedServerData.map((trendingVideosData) => (\n        <Card\n          key={trendingVideosData.id}\n          className=\"bg-dark text-light text-center\"\n        >\n          <Card.Body>\n            <Video\n              height={trendingVideosData.videoMeta.height / 2}\n              src={sample}\n              width={trendingVideosData.videoMeta.width / 2}\n            />\n            <Card.Title>{trendingVideosData.text}</Card.Title>\n            <Link to={`/${trendingVideosData.authorMeta.name}`}>\n              <Author\n                avatar={trendingVideosData.authorMeta.avatar}\n                nickname={trendingVideosData.authorMeta.nickName}\n              />\n            </Link>\n            <Stats\n              comments={trendingVideosData.commentCount}\n              likes={trendingVideosData.diggCount}\n              views={trendingVideosData.playCount}\n            />\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nTrendingFeedItem.propTypes = {\n  trendingFeedServerData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      videoMeta: PropTypes.shape({\n        duration: number,\n        height: number,\n        width: number,\n      }),\n      videoUrl: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TrendingFeedItem;\n","import { useState, useEffect, useContext } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { TikTukContext } from \"../store/context\";\nimport TrendingFeedItem from \"../components/TrendingFeedItem\";\nimport { getTrendingFeedData } from \"../services\";\nimport LoadingSpinner from \"../assets/LoadingSpinner\";\n\nconst TrendingFeedPage = () => {\n  const { setIsLoading, isLoading } = useContext(TikTukContext);\n  const [videoIndex, setVideoIndex] = useState(9);\n  const [trendingFeedServerData, setTrendingFeedServerData] = useState([]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsLoading(true);\n    }\n    getTrendingFeedData().then((trendingFeedData: any) => {\n      setTrendingFeedServerData(trendingFeedData);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const canShowMore = () => {\n    return trendingFeedServerData.length - videoIndex > 0;\n  };\n\n  const addVideos = () => {\n    if (trendingFeedServerData.length - videoIndex > 9) {\n      setVideoIndex(videoIndex + 9);\n      return;\n    }\n    setVideoIndex(videoIndex + (trendingFeedServerData.length - videoIndex));\n  };\n\n  return (\n    <div className=\"bg-dark\">\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <TrendingFeedItem\n            trendingFeedServerData={trendingFeedServerData.slice(0, videoIndex)}\n          />\n          {canShowMore() && (\n            <Card className=\"bg-dark text-white\">\n              <Button onClick={() => addVideos()} type=\"button\" variant=\"light\">\n                Show more\n              </Button>\n            </Card>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TrendingFeedPage;\n","import { useMemo, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserFeedPage from \"./pages/UserFeedPage.tsx\";\nimport TrendingFeedPage from \"./pages/TrendingFeedPage.tsx\";\nimport { TikTukContext } from \"./store/context\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const contextValues = useMemo(\n    () => ({ isLoading, setIsLoading }),\n    [isLoading, setIsLoading]\n  );\n  return (\n    <TikTukContext.Provider value={contextValues}>\n      <div className=\"App\">\n        <Routes>\n          <Route element={<TrendingFeedPage />} path=\"/\" />\n          <Route element={<UserFeedPage />} path=\"/:currentUser\" />\n        </Routes>\n      </div>\n    </TikTukContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./assets/styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}